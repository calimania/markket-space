---
import "../styles/base.css";
import BaseLayout from "./BaseLayout.astro";

export interface Props {
  title?: string;
  description?: string;
  image?: string;
  heroTitle?: string;
  heroSubtitle?: string;
  heroImage?: string;
  heroLqip?: string;
  heroAspect?: string; // CSS aspect like "4/5" or "16/9"
  heroVariant?: "spacious" | "compact";
  heroSize?: "spacious" | "compact" | "small";
  heroCtaText?: string;
  heroCtaUrl?: string;
}

// Use a single props object and local bindings to avoid literal type-narrowing in the
// template (which can trigger the TS "no overlap" comparison diagnostic).
const props = Astro.props as Props;
const title = props.title ?? "";
const description = props.description ?? "";
const image = props.image ?? "";
const heroTitle = props.heroTitle ?? title ?? "";
const heroSubtitle = props.heroSubtitle ?? "";
const heroImage = props.heroImage ?? image ?? "";
const heroLqip = props.heroLqip ?? undefined;
const heroAspect = props.heroAspect ?? "4/5";
const heroVariant = (props.heroVariant ?? "spacious") as "spacious" | "compact";
const heroSize = (props.heroSize ?? undefined) as
  | "spacious"
  | "compact"
  | "small"
  | undefined;
const heroCtaText = props.heroCtaText ?? undefined;
const heroCtaUrl = props.heroCtaUrl ?? undefined;

// Helper at runtime to pick the variant class (keeps TS happy)
const isCompact = heroVariant === "compact";
const isSmall = heroSize === "small";
---

<BaseLayout title={title} description={description} image={image}>
  <main>
    <!-- Named slot 'hero' allows pages to fully override the hero markup if needed -->
    <slot name="hero">
      {
        heroTitle || heroSubtitle || heroImage ? (
          <section
            class={`page-hero ${isSmall ? "hero-small" : isCompact ? "hero-compact" : "hero-spacious"}`}
            aria-labelledby="page-hero-title"
          >
            <div class="page-hero-content">
              <div class="hero-copy">
                {heroTitle ? <h1 id="page-hero-title">{heroTitle}</h1> : null}
                {heroSubtitle ? (
                  <p class="about-subtitle">{heroSubtitle}</p>
                ) : null}
                {heroCtaText ? (
                  <p class="hero-cta">
                    <a class="cta-primary" href={heroCtaUrl || "#"}>
                      {heroCtaText}
                    </a>
                  </p>
                ) : null}
              </div>

              {heroImage ? (
                <div class="hero-image">
                  <div
                    class="img-frame"
                    style={`--aspect: ${heroAspect}; --lqip: ${heroLqip ? `url('${heroLqip}')` : "none"}`}
                  >
                    <img
                      src={heroImage}
                      alt={heroTitle || "Hero image"}
                      onload="this.parentElement.classList.add('is-loaded')"
                    />
                  </div>
                </div>
              ) : null}
            </div>
          </section>
        ) : null
      }
    </slot>

    <section class="slot-section">
      <slot />
    </section>
  </main>
</BaseLayout>

<style>
  /* Page layout + hero styles (uses theme vars from base.css) */
  .page-hero {
    padding: 3rem 0 1.75rem;
    background: var(--bg-alt);
    color: var(--text);
  }

  .page-hero-content {
    max-width: 1100px;
    margin: 0 auto;
    display: grid;
    grid-template-columns: 1fr 420px;
    gap: 2rem;
    align-items: center;
    padding: 0 1rem;
  }

  .hero-copy h1 {
    margin: 0 0 0.5rem 0;
    line-height: 1.05;
  }
  .about-subtitle {
    margin: 0.25rem 0 1rem 0;
    color: var(--text-muted, rgba(0, 0, 0, 0.7));
  }

  .hero-cta .cta-primary {
    display: inline-block;
  }

  /* framed image with blur-up (LQIP) support */
  .hero-image .img-frame {
    width: 100%;
    aspect-ratio: var(--aspect, 4/5);
    border-radius: var(--radius);
    overflow: hidden;
    background: var(--bg-card, #f7f7f7);
    background-image: var(--lqip, none);
    background-size: cover;
    background-position: center;
    filter: blur(12px) saturate(0.95);
    transition:
      filter 320ms ease,
      transform 320ms ease,
      box-shadow 320ms ease;
    transform-origin: center center;
  }

  /* small hero variant for informational pages */
  .page-hero.hero-small {
    padding: 1rem 0 0.75rem;
    background: var(--bg-alt);
  }
  .page-hero.hero-small .page-hero-content {
    max-width: 900px;
    grid-template-columns: 1fr 260px;
    gap: 1rem;
    padding: 0 1rem;
  }
  .page-hero.hero-small .hero-copy h1 {
    font-size: clamp(1.2rem, 2.2vw, 1.6rem);
    margin-bottom: 0.25rem;
  }
  .page-hero.hero-small .about-subtitle {
    font-size: 0.95rem;
    margin-bottom: 0.5rem;
  }

  .hero-image .img-frame img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
    opacity: 0;
    transform: translateY(6px) scale(1.02);
    transition:
      opacity 320ms ease,
      transform 320ms ease;
  }

  .hero-image .img-frame:hover {
    transform: translateY(-6px) scale(1.01);
    box-shadow:
      0 28px 60px rgba(12, 22, 43, 0.12),
      0 6px 20px rgba(0, 0, 0, 0.06);
  }

  /* when image loads, reveal the real image and remove the blur-up */
  .hero-image .img-frame.is-loaded {
    filter: none;
    background-image: none;
  }
  .hero-image .img-frame.is-loaded img {
    opacity: 1;
    transform: none;
  }

  :global(.page-content h1),
  :global(.page-content h2),
  :global(.page-content h3) {
    color: var(--text);
    margin-top: 1.25rem;
    margin-bottom: 0.5rem;
  }
  :global(.page-content p) {
    margin-bottom: 1.25rem;
  }

  /* Buttons */

  .page-hero {
    padding: 3rem 0 1.75rem;
    background: var(--bg-alt);
    color: var(--text);
  }

  .page-hero-content {
    max-width: 1100px;
    margin: 0 auto;
    display: grid;
    grid-template-columns: 1fr 420px;
    gap: 2rem;
    align-items: center;
    padding: 0 1rem;
  }

  .hero-copy h1 {
    margin: 0 0 0.5rem 0;
    line-height: 1.05;
  }
  .about-subtitle {
    margin: 0.25rem 0 1rem 0;
    color: var(--text-muted, rgba(0, 0, 0, 0.7));
  }

  .hero-cta .cta-primary {
    display: inline-block;
  }

  /* framed image with blur-up (LQIP) support */
  .hero-image .img-frame {
    width: 100%;
    aspect-ratio: var(--aspect, 4/5);
    border-radius: var(--radius);
    overflow: hidden;
    background: var(--bg-card, #f7f7f7);
    background-image: var(--lqip, none);
    background-size: cover;
    background-position: center;
    filter: blur(12px) saturate(0.95);
    transition:
      filter 320ms ease,
      transform 320ms ease,
      box-shadow 320ms ease;
    transform-origin: center center;
  }

  .hero-image .img-frame img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
    opacity: 0;
    transform: translateY(6px) scale(1.02);
    transition:
      opacity 320ms ease,
      transform 320ms ease;
  }

  .hero-image .img-frame:hover {
    transform: translateY(-6px) scale(1.01);
    box-shadow:
      0 28px 60px rgba(12, 22, 43, 0.12),
      0 6px 20px rgba(0, 0, 0, 0.06);
  }

  /* when image loads, reveal the real image and remove the blur-up */
  .hero-image .img-frame.is-loaded {
    filter: none;
    background-image: none;
  }
  .hero-image .img-frame.is-loaded img {
    opacity: 1;
    transform: none;
  }

  .slot-section {
    padding: 2.25rem 0 3.5rem;
    background: var(--bg);
  }

  :global(.page-content) {
    max-width: 900px;
    margin: 0 auto;
    background: var(--bg);
    padding: 1.25rem;
    border-radius: var(--radius);
    box-shadow: var(--shadow-lg);
    border: 1px solid var(--border-light);
    color: var(--text);
    line-height: 1.7;
  }

  :global(.page-content h1),
  :global(.page-content h2),
  :global(.page-content h3) {
    color: var(--text);
    margin-top: 1.25rem;
    margin-bottom: 0.5rem;
  }
  :global(.page-content p) {
    margin-bottom: 1.25rem;
  }

  /* Buttons */
  .cta-primary {
    background: var(--primary);
    color: var(--text-on-primary);
    padding: 0.6rem 1rem;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 700;
  }
  .cta-secondary {
    background: transparent;
    color: var(--primary);
    padding: 0.5rem 0.9rem;
    border-radius: 8px;
    border: 1px solid var(--border-light);
  }

  /* Responsive tweaks */
  @media (max-width: 900px) {
    .page-hero .page-hero-content {
      grid-template-columns: 1fr;
      gap: 1rem;
    }
    .hero-image img {
      max-width: 100%;
    }
    :global(.page-content) {
      padding: 1rem;
    }
  }

  /* Hero layout variants */
  .page-hero.hero-spacious {
    padding: 3.5rem 0 2.25rem;
  }
  .page-hero.hero-compact {
    padding: 1.5rem 0 1rem;
  }
  .page-hero.hero-spacious .page-hero-content {
    gap: 1.5rem;
  }
  .page-hero.hero-compact .page-hero-content {
    gap: 1rem;
    align-items: start;
  }
  .page-hero.hero-spacious h1 {
    font-size: clamp(2rem, 4vw, 3rem);
  }
  .page-hero.hero-compact h1 {
    font-size: clamp(1.4rem, 2.6vw, 1.9rem);
  }
  .page-hero.hero-spacious .about-subtitle {
    font-size: 1.125rem;
  }
  .page-hero.hero-compact .about-subtitle {
    font-size: 1rem;
    opacity: 0.95;
  }
  .page-hero.hero-compact .hero-cta .cta-primary {
    padding: 0.5rem 0.85rem;
    font-size: 0.95rem;
  }
</style>
