---
import { getCollection } from "astro:content";
import PageLayout from "../../layouts/PageLayout.astro";
import BlocksContent from "../../components/BlocksContent.astro";
import { renderExcerpt, imgFor } from "../../lib/entry.utils";

const pages = await getCollection("pages");
const page = pages.find((p) => p.data.slug == "blog")?.data;

const articles = await getCollection("posts");

const featured = articles?.[0] ?? null;
const secondary = articles?.[1] ?? null;
const rest = articles?.slice(2) ?? [];

const storeData = await getCollection("store");
const store = storeData[0]?.data || {};
const storeCover = store.Cover;
---

<PageLayout
  title={page?.SEO?.metaTitle || store.SEO?.metaTitle}
  description={page?.SEO?.metaDescription || store.SEO?.metaDescription}
  image={page?.SEO?.socialImage?.formats?.large?.url ||
    page?.SEO?.socialImage?.url ||
    storeCover?.url}
  heroTitle={page?.Title || "Markkët Space Blog"}
  heroSubtitle={page?.SEO?.metaDescription ||
    "Articles and updates for the seller community."}
  heroImage={page?.SEO?.socialImage?.url || storeCover?.url}
  heroLqip={page?.SEO?.socialImage?.formats?.small?.url}
  heroAspect={page?.SEO?.meta?.heroAspect || "4/5"}
  heroVariant={page?.SEO?.meta?.heroVariant || "spacious"}
>
  <section class="posts-list-section">
    <div class="container">
      <h2 class="text-2xl font-bold mt-8 mb-6" style="color: var(--text);">
        Latest articles
      </h2>

      {
        articles && articles.length > 0 ? (
          <>
            {featured && (
              <a
                href={`/blog/${featured.data?.slug || featured.id}`}
                class="block mb-6 rounded-2xl overflow-hidden shadow-xl"
                title={featured.data?.Title || featured.data?.slug}
              >
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6 items-stretch">
                  {imgFor(featured) ? (
                    <div class="md:col-span-1 h-72 md:h-auto overflow-hidden rounded-l-2xl">
                      <img
                        src={imgFor(featured)}
                        alt={featured.data?.Title || ""}
                        class="w-full h-full object-cover"
                        loading="lazy"
                      />
                    </div>
                  ) : (
                    <div class="md:col-span-1 h-72 md:h-auto bg-gradient-to-tr from-pink-50 to-indigo-50 flex items-center justify-center text-gray-400">
                      No image
                    </div>
                  )}

                  <div class="p-6 md:p-10 bg-white md:bg-transparent md:col-span-1 flex flex-col justify-center">
                    <h3
                      class="text-3xl font-extrabold mb-3"
                      style="color: var(--text);"
                    >
                      {featured.data?.Title || featured.data?.slug}
                    </h3>
                    <p class="max-w-2xl" style="color: var(--text-muted)">
                      {(renderExcerpt(featured) || "").slice(0, 300)}
                      {(renderExcerpt(featured) || "").length > 300 ? "…" : ""}
                    </p>
                  </div>
                </div>
              </a>
            )}

            <div class="grid md:grid-cols-3 gap-6">
              {secondary && (
                <a
                  href={`/blog/${secondary.data?.slug || secondary.id}`}
                  class="post-card col-span-2 bg-white rounded-xl shadow-md hover:shadow-lg transition p-4"
                  title={secondary.data?.Title}
                >
                  {imgFor(secondary) ? (
                    <div class="h-44 w-full overflow-hidden rounded-lg mb-4">
                      <img
                        src={imgFor(secondary)}
                        alt={secondary.data?.Title || ""}
                        class="w-full h-full object-cover"
                        loading="lazy"
                      />
                    </div>
                  ) : (
                    <div class="h-44 w-full rounded-lg mb-4 bg-gradient-to-tr from-pink-50 to-indigo-50 flex items-center justify-center text-gray-400">
                      No image
                    </div>
                  )}
                  <h3 class="text-xl font-semibold" style="color: var(--text);">
                    {secondary.data?.Title}
                  </h3>
                  <p class="mt-2 text-sm" style="color: var(--text-muted)">
                    {(renderExcerpt(secondary) || "").slice(0, 160)}
                    {(renderExcerpt(secondary) || "").length > 160 ? "…" : ""}
                  </p>
                </a>
              )}

              <div class="col-span-1 space-y-4">
                {rest && rest.length > 0 ? (
                  rest.map((a: any) => (
                    <a
                      href={`/blog/${a.data?.slug || a.id}`}
                      class="p-4 rounded-lg shadow-sm hover:shadow-md transition flex gap-4 items-start compact-item"
                      title={a.data?.Title}
                    >
                      {imgFor(a) ? (
                        <div class="w-28 h-20 rounded overflow-hidden flex-shrink-0">
                          <img
                            src={imgFor(a)}
                            alt={a.data?.Title || ""}
                            class="w-full h-full object-cover"
                            loading="lazy"
                          />
                        </div>
                      ) : (
                        <div class="w-28 h-20 rounded bg-gradient-to-tr from-pink-50 to-indigo-50 flex items-center justify-center text-gray-400 flex-shrink-0">
                          No image
                        </div>
                      )}
                      <div class="flex-1">
                        <h4
                          class="font-semibold text-lg"
                          style="color: var(--text);"
                        >
                          {a.data?.Title}
                        </h4>
                        <p
                          class="text-sm mt-1"
                          style="color: var(--text-muted)"
                        >
                          {(renderExcerpt(a) || "").slice(0, 140)}
                          {(renderExcerpt(a) || "").length > 140 ? "…" : ""}
                        </p>
                      </div>
                    </a>
                  ))
                ) : (
                  <p class="text-sm" style="color: var(--text-muted)">
                    No more articles
                  </p>
                )}
              </div>
            </div>
          </>
        ) : (
          <p class="text-sm" style="color: var(--text-muted)">
            No articles yet — check back soon.
          </p>
        )
      }
    </div>
  </section>

  {
    page?.Content && page.Content.length > 0 && (
      <section class="page-content-section">
        <div class="container">
          <BlocksContent content={page.Content} className="page-content" />
        </div>
      </section>
    )
  }
</PageLayout>
